# CultivApp - Development Environment Configuration
# File-based H2 database with PostgreSQL compatibility

spring:
  datasource:
    # File-based H2 keeps data even after restart
    # Database file stored in: server/.data/cultivapp-dev.mv.db
    # MODE=PostgreSQL: Use PostgreSQL syntax for compatibility
    # DATABASE_TO_LOWER=TRUE: Convert identifiers to lowercase
    # AUTO_SERVER=TRUE: Allow multiple connections to same file
    url: jdbc:h2:file:./server/.data/cultivapp-dev;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;AUTO_SERVER=TRUE
    
    # H2 database driver
    driver-class-name: org.h2.Driver
    
    # Default credentials (H2 file mode)
    username: sa
    password:

  # JPA/Hibernate configuration for H2
  jpa:
    # Use H2 dialect for optimal SQL generation
    database-platform: org.hibernate.dialect.H2Dialect
    
    # DDL mode: none (we use schema.sql for table creation)
    # This prevents Hibernate from auto-creating tables
    hibernate:
      ddl-auto: none
    
    # Show SQL queries for debugging
    show-sql: true

  # SQL script initialization
  sql:
    init:
      # FIXED: Using 'embedded' mode for smart initialization
      # WHY: 'embedded' only runs scripts if database is empty/new
      # BEHAVIOR: 
      #   - First run: executes schema.sql and data.sql
      #   - Subsequent runs: skips scripts (preserves data)
      #   - If .mv.db deleted: re-initializes automatically
      # NOTE: To reset database, delete server/.data/cultivapp-dev.mv.db file
      mode: embedded
      # Create tables first, then insert data (only on first run)
      schema-locations: classpath:schema.sql
      data-locations: classpath:data.sql
      # Continue even if some SQL statements fail (useful during development)
      continue-on-error: false

# H2 Console disabled in file mode (not needed for development)
# To inspect database, use a SQL client connecting to the file
